/*
 * TencentBlueKing is pleased to support the open source community by making
 * 蓝鲸智云 - Go 开发框架 (BlueKing - Go Framework) available.
 * Copyright (C) 2017 THL A29 Limited, a Tencent company. All rights reserved.
 * Licensed under the MIT License (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 *	https://opensource.org/licenses/MIT
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * We undertake not to change the open source license (MIT license) applicable
 * to the current version of the project delivered to anyone in the future.
 */

package i18n

// Lang 语言
type Lang string

// Placeholder 翻译文件中的占位符
const Placeholder = "<TODO>"

const (
	// LangDefault 默认语言
	LangDefault Lang = "default"
	// LangZH 中文
	LangZH Lang = "zh"
	// LangEN 英文
	LangEN Lang = "en"
	// NOTE: 其他语言可由开发者按需启用
	// LangRU 俄语
	// LangRU Lang = "ru"
	// LangFR 法语
	// LangFR Lang = "fr"
	// LangJA 日语
	// LangJA Lang = "ja"
)

const (
	// CookieValueZH ...
	CookieValueZH = "zh-cn"
	// CookieValueEN ...
	CookieValueEN = "en-us"
	// NOTE: 其他语言可由开发者按需启用
	// CookieValueRU ...
	// CookieValueRU = "ru-ru"
	// CookieValueFR ...
	// CookieValueFR = "fr-fr"
	// CookieValueJA ...
	// CookieValueJA = "ja-jp"
)

// 国际化消息文件模板，如新增语言时，需在此处更新模板
const msgFileTpl = `# Project's i18n messages generated by 'make i18n' command.
{{ range . }}
{{- range .Locations }}
# {{ . }}
{{- end }}
- id: {{ .ID | quote }}
  zh: {{ .Zh | quote }}
  en: {{ .En | quote }}
{{ end -}}
`

// 支持的语言列表
var supportedLanguages = []Lang{LangZH, LangEN}

// 语言版本简写映射表
var langMap = map[string]Lang{
	"zh":      LangZH,
	"zh-cn":   LangZH,
	"zh-hans": LangZH,
	"zh-hant": LangZH,
	"en":      LangEN,
	"en-us":   LangEN,
	"en-gb":   LangEN,
	// NOTE: 其他语言可由开发者按需启用
	//"ru":    LangRU,
	//"ru-ru": LangRU,
	//"fr":    LangFR,
	//"fr-fr": LangFR,
	//"ja":    LangJA,
	//"ja-jp": LangJA,
}

// 国际化消息
type msg struct {
	ID string `yaml:"id"`
	Zh string `yaml:"zh,omitempty"`
	En string `yaml:"en,omitempty"`
	// NOTE: 其他语言可由开发者按需启用
	// Ru string `yaml:"ru,omitempty"`
	// Fr string `yaml:"fr,omitempty"`
	// Ja string `yaml:"ja,omitempty"`
	Locations []string `yaml:"locations,omitempty"`
}

// 初始化国际化消息（默认填充占位符）
func newMsgWithPlaceholders(id string) msg {
	return msg{
		ID: id,
		Zh: Placeholder,
		En: Placeholder,
		// NOTE: 其他语言可由开发者按需启用
		// Ru: Placeholder,
		// Fr: Placeholder,
		// Ja: Placeholder,
	}
}
